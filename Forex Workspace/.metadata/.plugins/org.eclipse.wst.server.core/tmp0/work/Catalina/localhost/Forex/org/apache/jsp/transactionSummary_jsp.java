/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.34
 * Generated at: 2015-04-14 13:18:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import transactionBean.ReportBean;
import java.util.ArrayList;
import java.sql.*;
import java.io.*;
import javax.servlet.*;
import transactionBean.*;
import utility.*;
import java.text.*;

public final class transactionSummary_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header.jsp", Long.valueOf(1425577437326L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<link href=\"templatemo_style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<title>Transaction Summary</title>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Header</title>\r\n");
      out.write("<link href=\"templatemo_style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t<div id=\"templatemo_menu_wrapper\">\r\n");
      out.write("\t\t\t<div id=\"templatemo_menu\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/Forex/TransactionRH\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/Forex/TransactionBuyRH\">Buy</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/Forex/TransactionSellRH\">Sell</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/Forex/TnxSummaryRH\">Summary</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"/Forex/LogOutRH\">LogOut</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"ChangePwd.jsp\">Change Password</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- end of templatemo_menu -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");
  
	CorpusBean myCorpus = new CorpusBean();
	EvaluateBean eBean =  new EvaluateBean();
	 
	myCorpus =  (CorpusBean) session.getAttribute(Constants.corpusBean);
	eBean = (EvaluateBean) session.getAttribute(Constants.EVALUATE_BEAN);
	int rollNbr = myCorpus.getRollNbr();
	/*
	int rank = Integer.parseInt((String)session.getAttribute(Constants.RANK));
	float totalValue = Float.parseFloat((String) session.getAttribute(Constants.TOTALVALUE));
	*/
	int rank = eBean.getRank();
	float totalValue = eBean.getTotalValue();
	String Name = myCorpus.getFirstName().concat(" ").concat(myCorpus.getLastName());
	DecimalFormat df = new DecimalFormat("#,###");
	int rows= 1;
	String Forward = "Forward ";
	String tnx_type ="";
	ArrayList<ReportBean> report = new ArrayList<ReportBean>();
	if((session.getAttribute(Constants.REPORT)) != null){
		report = (ArrayList<ReportBean>) session.getAttribute(Constants.REPORT);
	}
	ArrayList<ReportBean> fwdreport = new ArrayList<ReportBean>();
	if((session.getAttribute(Constants.FwdREPORT)) != null){
		fwdreport = (ArrayList<ReportBean>) session.getAttribute(Constants.FwdREPORT);
	}
	
	

      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<table cellspacing=\"2\" cellpadding=\"0\" align=\"center\" border=\"0\" >\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<table cellspacing=\"6\" cellpadding=\"3\" align=\"center\" border=\"2\" >\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"4\" align=\"LEFT\"><h1>\r\n");
      out.write("\t\t\t\t\t\t\t\tCORPUS VALUE:\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( df.format(totalValue) );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</h1></td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"1\" align=\"LEFT\"><h1>\r\n");
      out.write("\t\t\t\t\t\t\t\tRANK :\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( rank );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</h1></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr height=\"2\" bgcolor=\"black\">\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"5\" align=\"center\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"5\" align=\"center\"><h1>TRANSACTION SUMMARY</h1></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<h2>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Transaction ID</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Transaction Type</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Transaction Description</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Amount</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Date</td>\r\n");
      out.write("\t\t\t\t\t\t</h2>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 for (ReportBean iReport : report) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getTnx_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
 if(iReport.getIs_future()==1){ tnx_type = Forward+ iReport.getTnx_type() ;
		}else{	tnx_type = iReport.getTnx_type() ;	}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( tnx_type );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
 if(iReport.getTnx_type().equalsIgnoreCase("BUY")) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getFrom_crate()+" "+ iReport.getFrom_currency()+" = "+iReport.getTo_cny_rate()+" "+ iReport.getTo_cny() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
  }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getTo_cny_rate()+" "+ iReport.getFrom_currency()+" = "+iReport.getFrom_crate()+" "+ iReport.getTo_cny() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getAmount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getExec_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t<td width=\"10%\"></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<table cellspacing=\"6\" cellpadding=\"3\" align=\"center\" border=\"2\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>SALES</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"right\">");
      out.print( df.format(eBean.getSales()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>PURCHASE</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"right\">");
      out.print( df.format(eBean.getPurchase()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>CLOSING INVENTORY</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"right\">");
      out.print( df.format(eBean.getClInv()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>PROFIT</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"right\">");
      out.print( df.format(eBean.getProfit()) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<table cellspacing=\"6\" cellpadding=\"3\" align=\"center\" border=\"2\"  width=\"80%\" >\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"5\" align=\"center\"><h1>FORWARDS UNEXECUTED</h1></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<h2>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Transaction ID</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Forward Type</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">forwardDescription</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Amount</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td align=\"center\">Execution Date</td>\r\n");
      out.write("\t\t\t\t\t\t</h2>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 if(fwdreport.size() <= 0)  { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<td align=\"center\" colspan=\"5\">No Unexecuted Forwards</td>\r\n");
      out.write("\t\t\t\t\t");
} else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 for (ReportBean iReport : fwdreport) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getTnx_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
 if(iReport.getIs_future()==1){ tnx_type = Forward+ iReport.getTnx_type() ;
		}else{	tnx_type = iReport.getTnx_type() ;	}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( tnx_type );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
 if(iReport.getTnx_type().equalsIgnoreCase("BUY")) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getFrom_crate()+" "+ iReport.getFrom_currency()+" = "+iReport.getTo_cny_rate()+" "+ iReport.getTo_cny() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
  }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getTo_cny_rate()+" "+ iReport.getFrom_currency()+" = "+iReport.getFrom_crate()+" "+ iReport.getTo_cny() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getAmount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"center\">");
      out.print( iReport.getExec_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
